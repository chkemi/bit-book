{"version":3,"sources":["app/components/Header.js","app/components/Footer.js","models/Post.js","models/User.js","services/Users.js","services/Posts.js","app/components/FloatingButton.js","models/Comment.js","services/Comments.js","app/components/PostsFeed/CommentsCount.js","app/components/PostsFeed/PostItem.js","app/components/PostsFeed/PostsFeed.js","app/components/PostsFeed/SinglePost.js","app/components/Modal/Modal.js","app/components/Profile/Profile.js","services/UpdateProfile.js","app/components/Profile/MyProfile.js","app/components/PeoplePage.js","app/components/Register.js","services/Register.js","services/Login.js","app/components/Profile/UserProfile.js","app/App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","react_router_dom","to","id","onClick","logout","Footer","Date","getFullYear","Post","userId","type","comments","Object","classCallCheck","this","VideoPost","videoUrl","_this","possibleConstructorReturn","getPrototypeOf","call","ImagePost","imageUrl","_this2","TextPost","text","_this3","User","_ref","sid","email","avatarUrl","name","about","posts","createdAt","date","firstName","first","lastName","last","biography","bio","toLocaleDateString","getDecodedId","decoded","jwtDecode","localStorage","getItem","console","log","getToken","fetchLoggedInUser","fetch","concat","method","headers","x-api-key","Content-Type","Authorization","then","result","json","user","catch","err","fetchPosts","res","map","post","fetchCreatePost","dataObj","body","JSON","stringify","FloatingButton","state","instances","createButtons","document","querySelectorAll","actionButton","M","Modal","init","querySelector","FloatingActionButton","Fragment","data-target","htmlFor","value","postContent","onChange","changeInputValues","createTextPost","createImagePost","createVideoPost","Component","Comment","postId","userAvatarUrl","fetchCommentsByPostId","comment","fetchDeleteComment","CommentsCount","commentsCount","get","setState","PostItem","deletePost","src","alt","title","width","height","frameBorder","allow","allowFullScreen","PostsFeed_CommentsCount","PostsFeed","allPosts","onlyImages","onlyVideos","onlyText","bind","assertThisInitialized","filterText","filterVideos","filterImages","e","defineProperty","target","reversedPosts","reverse","preventDefault","Math","random","isPublic","_this4","_this5","_this6","_this7","length","isText","PostsFeed_PostItem","key","isPicture","isVideo","showPosts","app_components_FloatingButton","SinglePost","deleteComment","match","params","reversedComments","commentInputValue","changeValue","submitComment","singlePost","data","ok","Error","statusText","href","showPost","action","placeholder","disabled","showComments","handleInputChange","isValidName","error","isValidBio","isValidImg","startsWith","getInputValues","image","prefix","job","countryCode","validationResultName","validationResultBio","validationResultImg","style","transform","show","opacity","defaultValue","color","close","handleSubmit","React","Profile","isShowing","components_Modal_Modal","closeModal","openModal","UpdateProfile","MyProfile","fetchUserData","prevProps","components_Profile_Profile","PeoplePage","users","inputValue","required","filter","toLowerCase","includes","showSearch","showPeople","RegisterPage","nameInputValueReg","emailInputValueReg","passwordInputValueReg","emailInputValueLog","passwordInputValueLog","regValidate","logValidate","logButtonDisabled","regButtonDisabled","instance","sendRegisterReq","sendLoginReq","Tabs","password","token","statusCode","select","message","accessToken","setItem","logIn","logEmailRes","isValidEmailLogIn","logPassRes","isValidPassLogIn","regEmailRes","isValidEmailRegister","regPassRes","isValidPassRegister","UserProfile","App","logged","logOut","prevState","removeItem","components_Header","react_router","path","component","components_Footer","render","components_Register","ReactDOM","src_app_App","getElementById"],"mappings":"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","file":"static/js/main.021dd66c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.logout();\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className='teal darken-2'>\r\n                <div className=\"nav-wrapper container\">\r\n                    <Link to='/feeds' className=\"brand-logo\">BitBook</Link>\r\n                    <ul id=\"nav-mobile\" className=\"right\">\r\n                        <li><Link to='/'>Feed</Link></li>\r\n                        <li><Link to='/people'>People</Link></li>\r\n                        <li><Link to='/profile'>Profile</Link></li>\r\n                        <li><Link to='/' onClick={handleClick}>Logout</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className=\"page-footer teal darken-2\">\r\n            <div className=\"container center\">\r\n                <p>© Copyright: NexoVocniTeam {new Date().getFullYear()}</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","class Post {\r\n    constructor(id, userId, type, comments) {\r\n        this.id = id;\r\n        this.userId = userId;\r\n        this.type = type;\r\n        this.comments = comments;\r\n    }\r\n\r\n    isVideo() {\r\n        return this.type === 'video'\r\n    }\r\n\r\n    isPicture() {\r\n        return this.type === 'image'\r\n    }\r\n\r\n    isText() {\r\n        return this.type === 'text'\r\n    }\r\n}\r\n\r\nclass VideoPost extends Post {\r\n    constructor(id, userId, type, comments, videoUrl) {\r\n        super(id, userId, type, comments)\r\n        this.videoUrl = videoUrl;\r\n    }\r\n}\r\n\r\nclass ImagePost extends Post {\r\n    constructor(id, userId, type, comments, imageUrl) {\r\n        super(id, userId, type, comments)\r\n        this.imageUrl = imageUrl;\r\n    }\r\n}\r\n\r\nclass TextPost extends Post {\r\n    constructor(id, userId, type, comments, text) {\r\n        super(id, userId, type, comments)\r\n        this.text = text;\r\n    }\r\n}\r\n\r\nexport {\r\n    VideoPost,\r\n    ImagePost,\r\n    TextPost\r\n}","class User {\r\n    constructor({ id, sid, email, avatarUrl, name, about, comments, posts, createdAt }) {\r\n\r\n        const date = new Date(createdAt)\r\n\r\n        this.id = id;\r\n        this.sid = sid;\r\n        this.email = email;\r\n        this.avatarUrl = avatarUrl || \"http://via.placeholder.com/125\";\r\n        this.firstName = name ? name.first : \"\";\r\n        this.lastName = name ? name.last : \"\";\r\n        this.biography = about ? about.bio : \"No Bio\";\r\n        this.comments = comments;\r\n        this.posts = posts;\r\n        this.createdAt = date.toLocaleDateString();\r\n    }\r\n}\r\n\r\nexport {\r\n    User\r\n}\r\n","import { User } from '../models/User'\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst getDecodedId = () => {\r\n    const decoded = jwtDecode(localStorage.getItem('user'))\r\n    console.log(decoded);\r\n    return decoded.id;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem('user');\r\n\r\nconst fetchUserById = (userId) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/users/${userId}?_embed[]=posts&_embed[]=comments`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(result => result.json())\r\n        .then(user => new User(user)\r\n        )\r\n}\r\n\r\nconst fetchLoggedInUser = () => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/users/${getDecodedId()}?_embed[]=posts&_embed[]=comments`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(result => result.json())\r\n        .then(user => {\r\n            console.log(user);\r\n            return new User(user)\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst fetchUsers = () => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/users', {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(users => users.map(user => new User(user))\r\n        )\r\n}\r\n\r\nexport {\r\n    fetchUserById,\r\n    fetchUsers,\r\n    fetchLoggedInUser,\r\n    getDecodedId,\r\n    getToken,\r\n}","import { TextPost, ImagePost, VideoPost } from \"../models/Post\";\r\nimport { getToken } from \"./Users\";\r\n\r\nconst fetchPosts = () => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/posts?_embed=comments', {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(posts => {\r\n            return posts.map((post) => {\r\n                if (post.type === 'text') {\r\n                    return new TextPost(post.id, post.userId, post.type, post.comments, post.text)\r\n                } else if (post.type === 'image') {\r\n                    return new ImagePost(post.id, post.userId, post.type, post.comments, post.imageUrl)\r\n                } else if (post.type === 'video') {\r\n                    return new VideoPost(post.id, post.userId, post.type, post.comments, post.videoUrl)\r\n                }\r\n                return null\r\n            });\r\n        })\r\n}\r\n\r\nconst fetchSinglePost = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/posts/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then((singlePost) => {\r\n            if (singlePost.type === 'text') {\r\n                return new TextPost(singlePost.id, singlePost.userId, singlePost.type, singlePost.comments, singlePost.text)\r\n            } else if (singlePost.type === 'image') {\r\n                return new ImagePost(singlePost.id, singlePost.userId, singlePost.type, singlePost.comments, singlePost.imageUrl)\r\n            } else if (singlePost.type === 'video') {\r\n                return new VideoPost(singlePost.id, singlePost.userId, singlePost.type, singlePost.comments, singlePost.videoUrl)\r\n            }\r\n            return null\r\n        })\r\n}\r\n\r\nconst fetchCreatePost = (dataObj) => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n        body: JSON.stringify(dataObj)\r\n    })\r\n        .then(res => res.json())\r\n        .then(post => post)\r\n}\r\n\r\nconst fetchDeletePost = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/posts/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then((res) => {\r\n            console.log(res);\r\n        })\r\n}\r\n\r\nexport {\r\n    fetchPosts,\r\n    fetchSinglePost,\r\n    fetchCreatePost,\r\n    fetchDeletePost,\r\n}","import React, { Component } from 'react';\r\n\r\nimport M from 'materialize-css';\r\nimport './FloatingButton.css'\r\n\r\nclass FloatingButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.instances = null;\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const createButtons = document.querySelectorAll('.modal')\r\n        const instancesOfCreateButtons = M.Modal.init(createButtons)\r\n\r\n        const actionButton = document.querySelector('.fixed-action-btn');\r\n        const instancesOfActionButton = M.FloatingActionButton.init(actionButton);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"fixed-action-btn\">\r\n                    <button className=\"btn-floating btn-large red\">\r\n                        <i className=\"large material-icons\">+</i>\r\n                    </button>\r\n                    <ul>\r\n                        <li>Post\r\n                            <button data-target=\"modalPost\" className=\"btn modal-trigger btn-floating blue\">\r\n                                <i className=\"material-icons\"></i>\r\n                            </button>\r\n                        </li>\r\n                        <li>Image\r\n                            <button data-target=\"modalImage\" className=\"btn modal-trigger btn-floating green\">\r\n                                <i className=\"material-icons\"></i>\r\n                            </button>\r\n                        </li>\r\n                        <li>Video\r\n                            <button data-target=\"modalVideo\" className=\"btn modal-trigger btn-floating red\">\r\n                                <i className=\"material-icons\"></i>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id=\"modalPost\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>New Text Post</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <label className=\"active\" htmlFor=\"post-content\">Post content</label>\r\n                                <input value={this.props.postContent} onChange={this.props.changeInputValues} id=\"post-content\" name=\"postContent\" type=\"text\" className=\"validate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"modal-close blue waves-effect waves-blue btn\">Close</button>\r\n                        <button onClick={this.props.createTextPost} className=\"modal-close blue waves-effect waves-blue btn\">Post</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"modalImage\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>New Image Post</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <label className=\"active\" htmlFor=\"image-url\">Image URL</label>\r\n                                <input value={this.props.imageUrl} onChange={this.props.changeInputValues} id=\"image-url\" name=\"imageUrl\" type=\"text\" className=\"validate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"modal-close blue waves-effect waves-blue btn\">Close</button>\r\n                        <button onClick={this.props.createImagePost} className=\"modal-close blue waves-effect waves-blue btn\">Post</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"modalVideo\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>New Video Post</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <label className=\"active\" htmlFor=\"video-url\">YouTube video link</label>\r\n                                <input value={this.props.videoUrl} onChange={this.props.changeInputValues} id=\"video-url\" name=\"videoUrl\" type=\"text\" className=\"validate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"modal-close blue waves-effect waves-blue btn\">Close</button>\r\n                        <button onClick={this.props.createVideoPost} className=\"modal-close blue waves-effect waves-blue btn\">Post</button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;","class Comment {\r\n    constructor(id, postId, userId, body, userAvatarUrl) {\r\n        this.id = id;\r\n        this.postId = postId;\r\n        this.userId = userId;\r\n        this.body = body;\r\n        this.userAvatarUrl = userAvatarUrl;\r\n    }\r\n}\r\n\r\nexport {\r\n    Comment\r\n}","import { Comment } from \"../models/Comment\";\r\nimport { getToken } from \"./Users\";\r\n\r\nconst fetchCommentsByPostId = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/comments?postId=${id}&_expand=user`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(comments => {\r\n            console.log(comments);\r\n            return comments.map(comment => {\r\n                console.log(comment);\r\n                if (!comment.user) {\r\n                    return new Comment(comment.id, comment.postId, comment.userId, comment.body, 'http://via.placeholder.com/125')\r\n                }\r\n                return new Comment(comment.id, comment.postId, comment.userId, comment.body, comment.user.avatarUrl)\r\n            })\r\n        })\r\n}\r\n\r\nconst postComment = (data) => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/comments', {\r\n        method: 'POST',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText);\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(comment => new Comment(comment.sid, comment.postId, comment.userId, comment.body))\r\n}\r\n\r\nconst fetchDeleteComment = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/comments/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res)\r\n}\r\n\r\nconst fetchNumOfComments = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/comments?postId=${id}&_limit=1`, {\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.headers.get('x-total-count'))\r\n}\r\n\r\nexport {\r\n    fetchCommentsByPostId,\r\n    postComment,\r\n    fetchNumOfComments,\r\n    fetchDeleteComment,\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchNumOfComments } from '../../../services/Comments';\r\n\r\nclass CommentsCount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentsCount: \"-\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchNumOfComments(this.props.postId)\r\n            .then((commentsCount) => {\r\n                this.setState({\r\n                    commentsCount\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link className='right brown-text text-darken-4' to={`/feeds/${this.props.postId}`}>{this.state.commentsCount} Comments</Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentsCount;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDecodedId } from '../../../services/Users';\r\nimport CommentsCount from './CommentsCount';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PostItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        post: PropTypes.object.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        deletePost: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"card teal lighten-4\">\r\n                        {this.props.post.userId === getDecodedId()\r\n                            ? <button id={this.props.post.id} onClick={this.props.deletePost} className='delete right'>x</button>\r\n                            : null\r\n                        }\r\n                        {this.props.type === 'Text'\r\n                            ? <div className=\"card-content brown-text text-darken-4\">\r\n                                <p className='center'>{this.props.post.text}</p>\r\n                            </div>\r\n                            : null}\r\n\r\n                        {this.props.type === 'Image'\r\n                            ? <div className=\"card-image\">\r\n                                <img src={this.props.post.imageUrl} alt='Something' />\r\n                            </div>\r\n                            : null}\r\n\r\n                        {this.props.type === 'Video'\r\n                            ? <div>\r\n                                <iframe title={this.props.post.id} width=\"100%\" height='400px' src={this.props.post.videoUrl} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            </div>\r\n                            : null}\r\n\r\n                        <div className=\"card-action\">\r\n                            <Link to={`/feeds/${this.props.post.id}`} className='brown-text text-darken-4'>{this.props.type} post</Link>\r\n                            <CommentsCount postId={this.props.post.id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostItem;","import React, { Component } from 'react';\r\nimport { fetchPosts, fetchCreatePost, fetchDeletePost } from '../../../services/Posts';\r\nimport FloatingButton from '../FloatingButton';\r\nimport PostItem from './PostItem';\r\n\r\nclass PostsFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            allPosts: true,\r\n            onlyImages: false,\r\n            onlyVideos: false,\r\n            onlyText: false,\r\n            postContent: '',\r\n            imageUrl: '',\r\n            videoUrl: '',\r\n\r\n        }\r\n\r\n        this.changeInputValues = this.changeInputValues.bind(this);\r\n        this.createTextPost = this.createTextPost.bind(this);\r\n        this.createImagePost = this.createImagePost.bind(this);\r\n        this.createVideoPost = this.createVideoPost.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n\r\n        this.filterText = this.filterText.bind(this);\r\n        this.filterVideos = this.filterVideos.bind(this);\r\n        this.filterImages = this.filterImages.bind(this);\r\n        this.allPosts = this.allPosts.bind(this);\r\n    }\r\n\r\n    changeInputValues(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchPosts()\r\n            .then((posts) => {\r\n                const reversedPosts = posts.reverse()\r\n                this.setState({\r\n                    posts: reversedPosts\r\n                })\r\n            })\r\n    }\r\n\r\n    createTextPost(e) {\r\n        e.preventDefault()\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            type: 'text',\r\n            text: this.state.postContent,\r\n            isPublic: true\r\n        }\r\n\r\n        fetchCreatePost(body)\r\n            .then((post) => {\r\n                console.log(post);\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    createImagePost(e) {\r\n        e.preventDefault()\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            type: 'image',\r\n            imageUrl: this.state.imageUrl,\r\n            isPublic: true\r\n        }\r\n\r\n        fetchCreatePost(body)\r\n            .then((post) => {\r\n                console.log(post);\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    createVideoPost(e) {\r\n        e.preventDefault()\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            type: 'video',\r\n            videoUrl: this.state.videoUrl,\r\n            isPublic: true,\r\n        }\r\n\r\n        fetchCreatePost(body)\r\n            .then((post) => {\r\n                console.log(post);\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    deletePost(e) {\r\n        e.preventDefault();\r\n\r\n        fetchDeletePost(e.target.id)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    showPosts() {\r\n        if (!this.state.posts.length) {\r\n            return <h1 className='center'>Loading...</h1>\r\n        }\r\n\r\n        if (this.state.allPosts) {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isText()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Text' />\r\n                    )\r\n                } else if (post.isPicture()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Image'\r\n                        />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Video' />\r\n                    )\r\n                }\r\n            })\r\n        } else if (this.state.onlyImages) {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isPicture()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Image' />\r\n                    )\r\n                }\r\n                return null;\r\n            })\r\n        } else if (this.state.onlyText) {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isText()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Text' />\r\n                    )\r\n                }\r\n                return null;\r\n            })\r\n        } else {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isVideo()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Video' />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n\r\n    filterText(e) {\r\n        this.setState({\r\n            allPosts: false,\r\n            onlyImages: false,\r\n            onlyVideos: false,\r\n            onlyText: true,\r\n        })\r\n    }\r\n\r\n    filterVideos(e) {\r\n        this.setState({\r\n            allPosts: false,\r\n            onlyImages: false,\r\n            onlyVideos: true,\r\n            onlyText: false,\r\n        })\r\n    }\r\n\r\n    filterImages(e) {\r\n        this.setState({\r\n            allPosts: false,\r\n            onlyImages: true,\r\n            onlyVideos: false,\r\n            onlyText: false,\r\n        })\r\n    }\r\n\r\n    allPosts(e) {\r\n        this.setState({\r\n            allPosts: true,\r\n            onlyImages: false,\r\n            onlyVideos: false,\r\n            onlyText: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='row'>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.allPosts}>All Posts</button>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.filterImages}>Images</button>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.filterVideos}>Videos</button>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.filterText}>Text</button>\r\n                </div>\r\n                {this.showPosts()}\r\n                <FloatingButton changeInputValues={this.changeInputValues} postContent={this.state.postContent} imageUrl={this.state.imageUrl} videoUrl={this.state.videoUrl} createTextPost={this.createTextPost} createImagePost={this.createImagePost} createVideoPost={this.createVideoPost} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostsFeed;","import React, { Component } from 'react';\r\nimport { fetchSinglePost } from '../../../services/Posts';\r\nimport { getDecodedId } from '../../../services/Users';\r\nimport { postComment, fetchCommentsByPostId, fetchDeleteComment } from '../../../services/Comments';\r\n\r\nimport './SinglePost.css'\r\n\r\nclass SinglePost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: null,\r\n            comments: [],\r\n            commentInputValue: '',\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n        this.deleteComment = this.deleteComment.bind(this);\r\n        this.submitComment = this.submitComment.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchSinglePost(this.props.match.params.id)\r\n            .then((post) => {\r\n\r\n                fetchCommentsByPostId(this.props.match.params.id)\r\n                    .then((comments) => {\r\n                        const reversedComments = comments.reverse()\r\n                        this.setState({\r\n                            post,\r\n                            comments: reversedComments\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({\r\n            commentInputValue: e.target.value,\r\n        })\r\n    }\r\n\r\n    submitComment(e) {\r\n        e.preventDefault();\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            userId: getDecodedId(),\r\n            postId: this.props.match.params.id,\r\n            body: this.state.commentInputValue,\r\n            isPublic: true\r\n        }\r\n\r\n        postComment(body)\r\n            .then((comment) => {\r\n                console.log(comment);\r\n\r\n                fetchCommentsByPostId(this.props.match.params.id)\r\n                    .then((comments) => {\r\n                        const reversedComments = comments.reverse()\r\n                        this.setState({\r\n                            comments: reversedComments,\r\n                            commentInputValue: ''\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    deleteComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetchDeleteComment(e.target.id)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                fetchCommentsByPostId(this.props.match.params.id)\r\n                    .then((comments) => {\r\n                        const reversedComments = comments.reverse()\r\n                        this.setState({\r\n                            comments: reversedComments,\r\n                            commentInputValue: ''\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    showPost() {\r\n        if (!this.state.post) {\r\n            return <h1>Loading</h1>;\r\n        }\r\n\r\n        if (this.state.post.isText()) {\r\n            return (\r\n                <div key={this.state.post.id} className=\"row post\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card teal lighten-4\">\r\n                            <div className=\"card-content brown-text text-darken-4\">\r\n                                <p className='center'>{this.state.post.text}</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <a className='brown-text text-darken-4' href=\"/\">Text post</a>\r\n                                <a className='right brown-text text-darken-4' href=\"/\">{this.state.comments.length} Comments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.post.isPicture()) {\r\n            return (\r\n                <div key={this.state.post.id} className=\"row post\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card teal lighten-4\">\r\n                            <div className=\"card-image\">\r\n                                <img src={this.state.post.imageUrl} alt='Something' />\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <a className='brown-text text-darken-4' href=\"/\">Image post</a>\r\n                                <a className='right brown-text text-darken-4' href=\"/\">{this.state.comments.length} Comments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div key={this.state.post.id} className=\"row post\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card teal lighten-4\">\r\n\r\n                            <div key={this.state.post.id}>\r\n                                <iframe title={this.state.post.id} width=\"100%\" height='400px' src={this.state.post.videoUrl} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <a className='brown-text text-darken-4' href=\"/\">Video post</a>\r\n                                <a className='right brown-text text-darken-4' href=\"/\">{this.state.comments.length} Comments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    showComments() {\r\n        return this.state.comments.map((comment) => {\r\n            return (\r\n                <div key={comment.id} className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-image\">\r\n                                {comment.userId === getDecodedId()\r\n                                    ? <button id={comment.id} onClick={this.deleteComment} className='delete right'>x</button>\r\n                                    : null\r\n                                }\r\n                                <img className='comment-image' src={comment.userAvatarUrl ? comment.userAvatarUrl : 'http://via.placeholder.com/125'} alt='Something' />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <p>{comment.body}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.showPost()}\r\n                <form method='POST' action='/'>\r\n                    <input type='text' placeholder='Add your comment' value={this.state.commentInputValue} onChange={this.changeValue} />\r\n                    <input type='submit' className='teal white-text' onClick={this.submitComment} disabled={this.state.commentInputValue ? false : true} />\r\n                </form>\r\n                {this.showComments()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SinglePost;","import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: props.user.firstName,\r\n            lastName: props.user.lastName,\r\n            name: `${props.user.firstName} ${props.user.lastName}`,\r\n            bio: props.user.biography,\r\n            image: props.user.avatarUrl\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    isValidName = (value) => {\r\n        if (value.length > 30) {\r\n            return { error: 'Error' };\r\n        }\r\n\r\n        if (value.length < 3) {\r\n            return { error: 'Error' };\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    isValidBio = (value) => {\r\n        if (value.length > 60) {\r\n            return { error: \"Error\" };\r\n        }\r\n\r\n        if (value.length < 10) {\r\n            return { error: 'Error' };\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    isValidImg = (value) => {\r\n        if (!value.length || value.startsWith(\"http\") === false) {\r\n            return { error: \"Error\" }\r\n        }\r\n        return true\r\n    }\r\n\r\n    getInputValues = (params) => {\r\n        const body = {\r\n            avatarUrl: this.state.image,\r\n            name: {\r\n                prefix: \"-\",\r\n                first: this.state.firstName,\r\n                last: this.state.lastName,\r\n            },\r\n            about: {\r\n                job: '-',\r\n                bio: this.state.bio,\r\n                countryCode: '-'\r\n            }\r\n        }\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const validationResultName = this.isValidName(this.state.name);\r\n        const validationResultBio = this.isValidBio(this.state.bio)\r\n        const validationResultImg = this.isValidImg(this.state.image)\r\n\r\n        return (\r\n            <div className=\"modal-wrapper \"\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6 \"><h4>Update profile</h4></div>\r\n                    </div>\r\n                    <div className=\"row\" >\r\n                        <div className=\"col s5 center\">\r\n                            <img className='modal-pic' src={this.props.user.avatarUrl} title=\"user\" alt='Something..' />\r\n\r\n                        </div>\r\n                        <div className=\"input-field col s5 \" id=\"full_name\"><p className=\"left\">Full Name:</p>\r\n                            <input\r\n                                name=\"name\"\r\n                                placeholder=\"Full Name\"\r\n                                onChange={this.handleInputChange}\r\n                                id=\"first_name\" type=\"text\"\r\n                                className=\"validate\"\r\n                                defaultValue={this.state.name} />\r\n                            {<p style={{ color: 'red', width: '50px' }}>{validationResultName.error}</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\"><p>Image URL:</p>\r\n                        <label htmlFor=\"img_url\">\r\n                            <input\r\n                                name='image'\r\n                                placeholder=\"ImgUrl\"\r\n                                onChange={this.handleInputChange}\r\n                                id=\"img_url\"\r\n                                type=\"text\"\r\n                                className=\"validate\"\r\n                                defaultValue={this.state.image}\r\n                            />\r\n                        </label>\r\n                        {<p id=\"error\" style={{ color: 'red', width: '50px' }}>{validationResultImg.error}</p>}\r\n                    </div>\r\n                    <div className=\"row\"><p>Biography:</p>\r\n\r\n                        <label htmlFor=\"biography\">\r\n\r\n                            <input\r\n                                name='bio'\r\n                                placeholder=\"User description and all text that describes user\"\r\n                                id=\"biography\" onChange={this.handleInputChange}\r\n                                type=\"text\" className=\"validate\"\r\n                                defaultValue={this.state.bio}\r\n                            />\r\n                        </label>\r\n                        {<p id=\"error\" style={{ color: 'red', width: '50px' }}>{validationResultBio.error}</p>}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn waves-effect waves-light btn-mrg-1\" onClick={this.props.close}>CLOSE</button>\r\n                        <button className=\"btn waves-effect waves-light btn-mrg-2\" type=\"submit\" disabled={validationResultBio.error || validationResultImg.error || validationResultName.error} name=\"action\" onClick={this.props.handleSubmit(this.getInputValues())} >UPDATE</button>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal/Modal'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"row center profile\">\r\n            <div className=\"col s12 \">\r\n                <div className=\"\">\r\n                    {props.isShowing ? <Modal className=\"modal\" show={props.isShowing} close={props.closeModal} user={props.user} handleSubmit={props.handleSubmit} /> : null}\r\n                    <div className=\"card-image\">\r\n                        <img src={props.user.avatarUrl} alt=\"\" className=\"circle responsive-img \" />\r\n                        <h5 className=\"card-title\">{`${props.user.firstName} ${props.user.lastName}`}</h5>\r\n                    </div>\r\n\r\n                    {props.closeModal ?\r\n                        <button data-target=\"modal1\" className=\"btn modal-trigger\" onClick={props.openModal} >Edit Profile</button> :\r\n                        null}\r\n\r\n                    <div className=\"card-content\">\r\n                        <p>{props.user.biography}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <div className=\"chip\"><i className=\"fab fa-cuttlefish\"></i> {props.comments.length} Comments  </div>\r\n                        <div className=\"chip\"><i className=\"fab fa-cuttlefish\"></i> {props.posts.length} posts </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    posts: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Profile;","import { getToken } from \"./Users\";\r\n\r\nconst UpdateProfile = (userId, body) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/users/${userId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n        body: JSON.stringify(body)\r\n    })\r\n        .then((res) => {\r\n            console.log(res);\r\n            return res.json()\r\n        })\r\n        .then((result) => {\r\n            console.log(result);\r\n            return result\r\n        });\r\n}\r\n\r\nexport default UpdateProfile;","import React, { Component } from 'react';\r\nimport { fetchLoggedInUser } from '../../../services/Users'\r\nimport Profile from './Profile';\r\nimport UpdateProfile from '../../../services/UpdateProfile'\r\nimport { getDecodedId } from '../../../services/Users';\r\n\r\nimport './MyProfile.css'\r\n\r\nclass MyProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: null,\r\n            comments: [],\r\n            posts: [],\r\n            isShowing: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUserData();\r\n    }\r\n\r\n    fetchUserData = () => {\r\n        fetchLoggedInUser()\r\n            .then(user => {\r\n                console.log(user);\r\n                this.setState({\r\n                    user: user,\r\n                    comments: user.comments,\r\n                    posts: user.posts\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.fetchUserData();\r\n        }\r\n    }\r\n\r\n    handleSubmit = (body) => (e) => {\r\n        e.preventDefault();\r\n\r\n        UpdateProfile(getDecodedId(), body)\r\n            .then((user) => {\r\n                this.setState({\r\n                    user: {\r\n                        avatarUrl: user.avatarUrl,\r\n                        firstName: user.name.first,\r\n                        lastName: user.name.last,\r\n                        biography: user.about.bio\r\n                    }\r\n                })\r\n            })\r\n\r\n        this.closeModal();\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            isShowing: true\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            isShowing: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Profile isShowing={this.state.isShowing} user={this.state.user} comments={this.state.comments} posts={this.state.posts} closeModal={this.closeModal} openModal={this.openModal} handleSubmit={this.handleSubmit} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyProfile","import React, { Component } from 'react';\r\nimport { fetchUsers } from '../../services/Users';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './PeoplePage.css'\r\n\r\nclass PeoplePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            inputValue: '',\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUsers().then((users) => {\r\n            this.setState({\r\n                users\r\n            })\r\n        })\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n\r\n    showSearch() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <form>\r\n                        <div className=\"input-field\">\r\n                            <input id=\"search\" type=\"search\" required value={this.state.inputValue} onChange={this.changeValue} />\r\n                            <label className=\"label-icon\" htmlFor=\"search\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </label>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    showPeople() {\r\n        return this.state.users\r\n            .filter((user) => {\r\n                const fullName = `${user.firstName} ${user.lastName}`;\r\n                return fullName.toLowerCase().includes(this.state.inputValue.toLowerCase())\r\n            })\r\n            .map((user) => (\r\n                <div key={user.id} className='row user clearfix valign-wrapper'>\r\n                    <div className='image left col s2'>\r\n                        <img className=\"img-people\" src={user.avatarUrl} alt='Something..' />\r\n                    </div>\r\n                    <div className='info col s9'>\r\n                        <h5><Link to={`profile/${user.id}`}>{`${user.firstName} ${user.lastName}`}</Link></h5>\r\n                        <p>Short user description: {user.biography}</p>\r\n                    </div>\r\n                    <div className='right col s1'>\r\n                        <p>Registered on: <b>{user.createdAt}</b></p>\r\n                    </div>\r\n                </div>\r\n            )\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.showSearch()}\r\n                {this.showPeople()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PeoplePage;","import React, { Component } from 'react';\r\n\r\nimport { fetchRegister } from '../../services/Register';\r\n\r\nimport M from 'materialize-css';\r\nimport './Register.css';\r\nimport { fetchLogin } from '../../services/Login';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameInputValueReg: '',\r\n            emailInputValueReg: '',\r\n            passwordInputValueReg: '',\r\n            emailInputValueLog: '',\r\n            passwordInputValueLog: '',\r\n            regValidate: null,\r\n            logValidate: null,\r\n            logButtonDisabled: false,\r\n            regButtonDisabled: false,\r\n        }\r\n\r\n        this.instance = null;\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.sendRegisterReq = this.sendRegisterReq.bind(this);\r\n        this.sendLoginReq = this.sendLoginReq.bind(this);\r\n    }\r\n\r\n    isValidEmailLogIn(value) {\r\n        if (value === '') {\r\n            return true;\r\n        }\r\n        if (!value.includes('@')) {\r\n            return {\r\n                error: 'Invalid email address'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isValidPassLogIn(value) {\r\n        if (value.length === 0) {\r\n            return true;\r\n        }\r\n        if (value.length < 6) {\r\n            return {\r\n                error: 'Password must be min 6 characters'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.instance = M.Tabs.init(document.querySelector('.tabs'));\r\n    }\r\n\r\n    isValidEmailRegister(value) {\r\n        if (value.length === 0) {\r\n            return true;\r\n        }\r\n        if (!value.includes(\"@\")) {\r\n            return {\r\n                error: 'Invalid email address'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isValidPassRegister(value) {\r\n        if (value.length === 0) {\r\n            return true;\r\n        }\r\n        if (value.length < 6) {\r\n            return {\r\n                error: 'Password must be min 6 characters'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    sendRegisterReq(e) {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            name: this.state.nameInputValueReg,\r\n            email: this.state.emailInputValueReg,\r\n            password: this.state.passwordInputValueReg,\r\n        }\r\n\r\n        fetchRegister(data)\r\n            .then((data) => {\r\n                if (data.statusCode === 422) {\r\n                    this.setState({\r\n                        regValidate: data.message,\r\n                        nameInputValueReg: '',\r\n                        emailInputValueReg: '',\r\n                        passwordInputValueReg: '',\r\n                    })\r\n                    return;\r\n                }\r\n                this.instance.select('login');\r\n            })\r\n    }\r\n\r\n    sendLoginReq(e) {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            email: this.state.emailInputValueLog,\r\n            password: this.state.passwordInputValueLog\r\n        }\r\n\r\n        fetchLogin(data)\r\n            .then((data) => {\r\n                if (data.accessToken) {\r\n                    localStorage.setItem('user', data.accessToken);\r\n                    this.props.logIn();\r\n                }\r\n\r\n                if (data.statusCode === 422) {\r\n                    this.setState({\r\n                        logValidate: 'Unable to login. Invalid credentials.',\r\n                    })\r\n                }\r\n\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const logEmailRes = this.isValidEmailLogIn(this.state.emailInputValueLog);\r\n        const logPassRes = this.isValidPassLogIn(this.state.passwordInputValueLog);\r\n        const regEmailRes = this.isValidEmailRegister(this.state.emailInputValueReg);\r\n        const regPassRes = this.isValidPassRegister(this.state.passwordInputValueReg);\r\n        return (\r\n            <>\r\n                <div className='row'>\r\n                    <div className='register col s6'>\r\n                        <h1>BitBook Register and Login</h1>\r\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt et voluptatum aliquam accusamus consequuntur distinctio nulla consectetur, dolorum dignissimos necessitatibus commodi. Nulla, maxime sint architecto ex itaque harum quas, quidem iusto eligendi laudantium, magni maiores quos. Odio necessitatibus ipsa laboriosam?</p>\r\n                    </div>\r\n                    <div className='col s5'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12\">\r\n                                <ul className=\"tabs\">\r\n                                    <li className=\"tab col s6\"><a href=\"#login\">Login</a></li>\r\n                                    <li className=\"tab col s6\"><a className='active' href=\"#register\">Register</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div id=\"login\" className=\"col s12\">\r\n                                <form>\r\n                                    <div className=\"form row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input name='emailInputValueLog' onChange={this.handleInputChange} placeholder=\"Email address\" id=\"login-email\" type=\"email\" className=\"validate\" value={this.state.emailInputValueLog} />\r\n                                            <label htmlFor=\"login-email\">Email</label>\r\n                                            <p className='validate-message center'>{logEmailRes ? logEmailRes.error : null}</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input name='passwordInputValueLog' onChange={this.handleInputChange} placeholder='Minimum 6 characters' id=\"login-password\" type=\"password\" className=\"validate\" value={this.state.passwordInputValueLog} />\r\n                                            <label htmlFor=\"login-password\">Password</label>\r\n                                            <p className='validate-message center'>{logPassRes ? logPassRes.error : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button disabled={logEmailRes.error || logPassRes.error} onClick={this.sendLoginReq} className='register col s12' type='submit'>Login</button>\r\n                                    <p className='validate-message center'>{this.state.logValidate}</p>\r\n                                </form>\r\n                            </div>\r\n                            <div id=\"register\" className=\"col s12\">\r\n                                <form>\r\n                                    <div className=\"form row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input onChange={this.handleInputChange} name='nameInputValueReg' placeholder=\"Full name\" id=\"full-name\" type=\"text\" className=\"validate\" value={this.state.nameInputValueReg} />\r\n                                            <label htmlFor=\"full-name\">Name</label>\r\n\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input onChange={this.handleInputChange} name='emailInputValueReg' placeholder=\"Email address\" id=\"register-email\" type=\"email\" className=\"validate\" value={this.state.emailInputValueReg} />\r\n                                            <label htmlFor=\"register-email\">Email</label>\r\n                                            <p className='validate-message center' >{regEmailRes ? regEmailRes.error : null}</p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input onChange={this.handleInputChange} name='passwordInputValueReg' placeholder='Minimum 6 characters' id=\"register-password\" type=\"password\" className=\"validate\" value={this.state.passwordInputValueReg} />\r\n                                            <label htmlFor=\"register-password\">Password</label>\r\n                                            <p className='validate-message center'  >{regPassRes ? regPassRes.error : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p className='validate-message center'>{this.state.regValidate}</p>\r\n                                    <button disabled={regEmailRes.error || regPassRes.error} className='register col s12' type='submit' onClick={this.sendRegisterReq}>Register</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","const fetchRegister = (dataObj) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': 'B1tD3V'\r\n        },\r\n        body: JSON.stringify(dataObj)\r\n    })\r\n        .then(res => {\r\n            console.log(res);\r\n            return res.json()\r\n        })\r\n        .then(token => token)\r\n}\r\n\r\nexport {\r\n    fetchRegister,\r\n}","const fetchLogin = (dataObj) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': 'B1tD3V'\r\n        },\r\n        body: JSON.stringify(dataObj)\r\n    })\r\n        .then(res => res.json())\r\n        .then((token) => token)\r\n}\r\n\r\nexport {\r\n    fetchLogin\r\n}","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { fetchUserById } from '../../../services/Users';\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            comments: [],\r\n            posts: [],\r\n            isShowing: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUserById(this.props.match.params.id)\r\n            .then(user => {\r\n                this.setState({\r\n                    user: user,\r\n                    comments: user.comments,\r\n                    posts: user.posts\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Profile isShowing={this.state.isShowing} user={this.state.user} comments={this.state.comments} posts={this.state.posts} closeModal={this.closeModal} openModal={this.openModal} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport PostsFeed from './components/PostsFeed/PostsFeed';\r\nimport SinglePost from './components/PostsFeed/SinglePost';\r\nimport MyProfile from './components/Profile/MyProfile'\r\nimport PeoplePage from './components/PeoplePage';\r\nimport RegisterPage from './components/Register';\r\nimport UserProfile from './components/Profile/UserProfile';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logged: localStorage.getItem('user') ? true : false,\r\n    }\r\n\r\n    this.logIn = this.logIn.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n  }\r\n\r\n  logIn() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        logged: !prevState.logged\r\n      }\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        logged: !prevState.logged\r\n      }\r\n    })\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.logged) {\r\n      return (\r\n        <Route path='/' render={(props) => {\r\n          return <RegisterPage logIn={this.logIn} />\r\n        }} />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Header logout={this.logOut} />\r\n        <main className='container'>\r\n          <Switch>\r\n            <Route path='/people' component={PeoplePage} />\r\n            <Route path='/profile/:id' component={UserProfile} />\r\n            <Route path='/profile' component={MyProfile} />\r\n            <Route path='/feeds/:id' component={SinglePost} />\r\n            <Route path='/' component={PostsFeed} />\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport App from '../src/app/App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}