{"version":3,"sources":["app/components/Header.js","app/components/Footer.js","models/Post.js","models/User.js","services/Users.js","services/Posts.js","app/components/FloatingButton.js","models/Comment.js","services/Comments.js","app/components/PostsFeed/CommentsCount.js","app/components/PostsFeed/PostItem.js","app/components/PostsFeed/PostsFeed.js","app/components/PostsFeed/SinglePost.js","app/components/Modal/Modal.js","app/components/Profile/Profile.js","services/UpdateProfile.js","app/components/Profile/MyProfile.js","app/components/PeoplePage.js","app/components/Register.js","services/Register.js","services/Login.js","app/components/Profile/UserProfile.js","app/App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","react_router_dom","to","id","Footer","Date","getFullYear","Post","userId","type","comments","Object","classCallCheck","this","VideoPost","videoUrl","_this","possibleConstructorReturn","getPrototypeOf","call","ImagePost","imageUrl","_this2","TextPost","text","_this3","User","_ref","sid","email","avatarUrl","name","about","posts","createdAt","date","firstName","first","lastName","last","biography","bio","toLocaleDateString","getDecodedId","decoded","jwtDecode","localStorage","getItem","console","log","getToken","fetchLoggedInUser","fetch","concat","method","headers","x-api-key","Content-Type","Authorization","then","result","json","user","catch","err","fetchPosts","res","map","post","fetchCreatePost","dataObj","body","JSON","stringify","FloatingButton","state","instances","createButtons","document","querySelectorAll","actionButton","M","Modal","init","querySelector","FloatingActionButton","Fragment","data-target","htmlFor","value","postContent","onChange","changeInputValues","onClick","createTextPost","createImagePost","createVideoPost","Component","Comment","postId","userAvatarUrl","fetchCommentsByPostId","comment","fetchDeleteComment","CommentsCount","commentsCount","get","setState","PostItem","deletePost","src","alt","title","width","height","frameBorder","allow","allowFullScreen","PostsFeed_CommentsCount","PostsFeed","allPosts","onlyImages","onlyVideos","onlyText","bind","assertThisInitialized","filterText","filterVideos","filterImages","e","defineProperty","target","reversedPosts","reverse","preventDefault","Math","random","isPublic","_this4","_this5","_this6","_this7","length","isText","PostsFeed_PostItem","key","isPicture","isVideo","showPosts","app_components_FloatingButton","SinglePost","deleteComment","match","params","reversedComments","commentInputValue","changeValue","submitComment","singlePost","data","ok","Error","statusText","href","showPost","action","placeholder","disabled","showComments","handleInputChange","isValidName","error","isValidBio","isValidImg","startsWith","getInputValues","image","prefix","job","countryCode","validationResultName","validationResultBio","validationResultImg","style","transform","show","opacity","defaultValue","color","close","handleSubmit","React","Profile","isShowing","components_Modal_Modal","closeModal","openModal","UpdateProfile","MyProfile","fetchUserData","prevProps","components_Profile_Profile","PeoplePage","users","inputValue","required","filter","toLowerCase","includes","showSearch","showPeople","RegisterPage","nameInputValueReg","emailInputValueReg","passwordInputValueReg","emailInputValueLog","passwordInputValueLog","regValidate","logValidate","logButtonDisabled","regButtonDisabled","instance","sendRegisterReq","sendLoginReq","Tabs","password","token","statusCode","select","message","accessToken","setItem","logIn","logEmailRes","isValidEmailLogIn","logPassRes","isValidPassLogIn","regEmailRes","isValidEmailRegister","regPassRes","isValidPassRegister","UserProfile","App","logged","prevState","components_Header","react_router","path","component","components_Footer","render","components_Register","ReactDOM","src_app_App","getElementById"],"mappings":"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","file":"static/js/main.659c3328.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <nav className='teal darken-2'>\r\n                <div className=\"nav-wrapper container\">\r\n                    <Link to='/feeds' className=\"brand-logo\">BitBook</Link>\r\n                    <ul id=\"nav-mobile\" className=\"right\">\r\n                        <li><Link to='/'>Feed</Link></li>\r\n                        <li><Link to='/people'>People</Link></li>\r\n                        <li><Link to='/profile'>Profile</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className=\"page-footer teal darken-2\">\r\n            <div className=\"container center\">\r\n                <p>© Copyright: NexoVocniTeam {new Date().getFullYear()}</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","class Post {\r\n    constructor(id, userId, type, comments) {\r\n        this.id = id;\r\n        this.userId = userId;\r\n        this.type = type;\r\n        this.comments = comments;\r\n    }\r\n\r\n    isVideo() {\r\n        return this.type === 'video'\r\n    }\r\n\r\n    isPicture() {\r\n        return this.type === 'image'\r\n    }\r\n\r\n    isText() {\r\n        return this.type === 'text'\r\n    }\r\n}\r\n\r\nclass VideoPost extends Post {\r\n    constructor(id, userId, type, comments, videoUrl) {\r\n        super(id, userId, type, comments)\r\n        this.videoUrl = videoUrl;\r\n    }\r\n}\r\n\r\nclass ImagePost extends Post {\r\n    constructor(id, userId, type, comments, imageUrl) {\r\n        super(id, userId, type, comments)\r\n        this.imageUrl = imageUrl;\r\n    }\r\n}\r\n\r\nclass TextPost extends Post {\r\n    constructor(id, userId, type, comments, text) {\r\n        super(id, userId, type, comments)\r\n        this.text = text;\r\n    }\r\n}\r\n\r\nexport {\r\n    VideoPost,\r\n    ImagePost,\r\n    TextPost\r\n}","class User {\r\n    constructor({ id, sid, email, avatarUrl, name, about, comments, posts, createdAt }) {\r\n\r\n        const date = new Date(createdAt)\r\n\r\n        this.id = id;\r\n        this.sid = sid;\r\n        this.email = email;\r\n        this.avatarUrl = avatarUrl || \"http://via.placeholder.com/125\";\r\n        this.firstName = name ? name.first : \"\";\r\n        this.lastName = name ? name.last : \"\";\r\n        this.biography = about ? about.bio : \"No Bio\";\r\n        this.comments = comments;\r\n        this.posts = posts;\r\n        this.createdAt = date.toLocaleDateString();\r\n    }\r\n}\r\n\r\nexport {\r\n    User\r\n}\r\n","import { User } from '../models/User'\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst getDecodedId = () => {\r\n    const decoded = jwtDecode(localStorage.getItem('user'))\r\n    console.log(decoded);\r\n    return decoded.id;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem('user');\r\n\r\nconst fetchUserById = (userId) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/users/${userId}?_embed[]=posts&_embed[]=comments`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(result => result.json())\r\n        .then(user => new User(user)\r\n        )\r\n}\r\n\r\nconst fetchLoggedInUser = () => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/users/${getDecodedId()}?_embed[]=posts&_embed[]=comments`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(result => result.json())\r\n        .then(user => {\r\n            console.log(user);\r\n            return new User(user)\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst fetchUsers = () => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/users', {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(users => users.map(user => new User(user))\r\n        )\r\n}\r\n\r\nexport {\r\n    fetchUserById,\r\n    fetchUsers,\r\n    fetchLoggedInUser,\r\n    getDecodedId,\r\n    getToken,\r\n}","import { TextPost, ImagePost, VideoPost } from \"../models/Post\";\r\nimport { getToken } from \"./Users\";\r\n\r\nconst fetchPosts = () => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/posts?_embed=comments', {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(posts => {\r\n            return posts.map((post) => {\r\n                if (post.type === 'text') {\r\n                    return new TextPost(post.id, post.userId, post.type, post.comments, post.text)\r\n                } else if (post.type === 'image') {\r\n                    return new ImagePost(post.id, post.userId, post.type, post.comments, post.imageUrl)\r\n                } else if (post.type === 'video') {\r\n                    return new VideoPost(post.id, post.userId, post.type, post.comments, post.videoUrl)\r\n                }\r\n                return null\r\n            });\r\n        })\r\n}\r\n\r\nconst fetchSinglePost = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/posts/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then((singlePost) => {\r\n            if (singlePost.type === 'text') {\r\n                return new TextPost(singlePost.id, singlePost.userId, singlePost.type, singlePost.comments, singlePost.text)\r\n            } else if (singlePost.type === 'image') {\r\n                return new ImagePost(singlePost.id, singlePost.userId, singlePost.type, singlePost.comments, singlePost.imageUrl)\r\n            } else if (singlePost.type === 'video') {\r\n                return new VideoPost(singlePost.id, singlePost.userId, singlePost.type, singlePost.comments, singlePost.videoUrl)\r\n            }\r\n            return null\r\n        })\r\n}\r\n\r\nconst fetchCreatePost = (dataObj) => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n        body: JSON.stringify(dataObj)\r\n    })\r\n        .then(res => res.json())\r\n        .then(post => post)\r\n}\r\n\r\nconst fetchDeletePost = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/posts/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then((res) => {\r\n            console.log(res);\r\n        })\r\n}\r\n\r\nexport {\r\n    fetchPosts,\r\n    fetchSinglePost,\r\n    fetchCreatePost,\r\n    fetchDeletePost,\r\n}","import React, { Component } from 'react';\r\n\r\nimport M from 'materialize-css';\r\nimport './FloatingButton.css'\r\n\r\nclass FloatingButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.instances = null;\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const createButtons = document.querySelectorAll('.modal')\r\n        const instancesOfCreateButtons = M.Modal.init(createButtons)\r\n\r\n        const actionButton = document.querySelector('.fixed-action-btn');\r\n        const instancesOfActionButton = M.FloatingActionButton.init(actionButton);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"fixed-action-btn\">\r\n                    <button className=\"btn-floating btn-large red\">\r\n                        <i className=\"large material-icons\">+</i>\r\n                    </button>\r\n                    <ul>\r\n                        <li>Post\r\n                            <button data-target=\"modalPost\" className=\"btn modal-trigger btn-floating blue\">\r\n                                <i className=\"material-icons\"></i>\r\n                            </button>\r\n                        </li>\r\n                        <li>Image\r\n                            <button data-target=\"modalImage\" className=\"btn modal-trigger btn-floating green\">\r\n                                <i className=\"material-icons\"></i>\r\n                            </button>\r\n                        </li>\r\n                        <li>Video\r\n                            <button data-target=\"modalVideo\" className=\"btn modal-trigger btn-floating red\">\r\n                                <i className=\"material-icons\"></i>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id=\"modalPost\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>New Text Post</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <label className=\"active\" htmlFor=\"post-content\">Post content</label>\r\n                                <input value={this.props.postContent} onChange={this.props.changeInputValues} id=\"post-content\" name=\"postContent\" type=\"text\" className=\"validate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"modal-close blue waves-effect waves-blue btn\">Close</button>\r\n                        <button onClick={this.props.createTextPost} className=\"modal-close blue waves-effect waves-blue btn\">Post</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"modalImage\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>New Image Post</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <label className=\"active\" htmlFor=\"image-url\">Image URL</label>\r\n                                <input value={this.props.imageUrl} onChange={this.props.changeInputValues} id=\"image-url\" name=\"imageUrl\" type=\"text\" className=\"validate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"modal-close blue waves-effect waves-blue btn\">Close</button>\r\n                        <button onClick={this.props.createImagePost} className=\"modal-close blue waves-effect waves-blue btn\">Post</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"modalVideo\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>New Video Post</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <label className=\"active\" htmlFor=\"video-url\">YouTube video link</label>\r\n                                <input value={this.props.videoUrl} onChange={this.props.changeInputValues} id=\"video-url\" name=\"videoUrl\" type=\"text\" className=\"validate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"modal-close blue waves-effect waves-blue btn\">Close</button>\r\n                        <button onClick={this.props.createVideoPost} className=\"modal-close blue waves-effect waves-blue btn\">Post</button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;","class Comment {\r\n    constructor(id, postId, userId, body, userAvatarUrl) {\r\n        this.id = id;\r\n        this.postId = postId;\r\n        this.userId = userId;\r\n        this.body = body;\r\n        this.userAvatarUrl = userAvatarUrl;\r\n    }\r\n}\r\n\r\nexport {\r\n    Comment\r\n}","import { Comment } from \"../models/Comment\";\r\nimport { getToken } from \"./Users\";\r\n\r\nconst fetchCommentsByPostId = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/comments?postId=${id}&_expand=user`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(comments => {\r\n            console.log(comments);\r\n            return comments.map(comment => {\r\n                console.log(comment);\r\n                if (!comment.user) {\r\n                    return new Comment(comment.id, comment.postId, comment.userId, comment.body, 'http://via.placeholder.com/125')\r\n                }\r\n                return new Comment(comment.id, comment.postId, comment.userId, comment.body, comment.user.avatarUrl)\r\n            })\r\n        })\r\n}\r\n\r\nconst postComment = (data) => {\r\n    return fetch('https://book-api.hypetech.xyz/v1/comments', {\r\n        method: 'POST',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText);\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(comment => new Comment(comment.sid, comment.postId, comment.userId, comment.body))\r\n}\r\n\r\nconst fetchDeleteComment = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/comments/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res)\r\n}\r\n\r\nconst fetchNumOfComments = (id) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/comments?postId=${id}&_limit=1`, {\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    })\r\n        .then(res => res.headers.get('x-total-count'))\r\n}\r\n\r\nexport {\r\n    fetchCommentsByPostId,\r\n    postComment,\r\n    fetchNumOfComments,\r\n    fetchDeleteComment,\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchNumOfComments } from '../../../services/Comments';\r\n\r\nclass CommentsCount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentsCount: \"-\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchNumOfComments(this.props.postId)\r\n            .then((commentsCount) => {\r\n                this.setState({\r\n                    commentsCount\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link className='right brown-text text-darken-4' to={`/feeds/${this.props.postId}`}>{this.state.commentsCount} Comments</Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentsCount;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDecodedId } from '../../../services/Users';\r\nimport CommentsCount from './CommentsCount';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PostItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        post: PropTypes.object.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        deletePost: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"card teal lighten-4\">\r\n                        {this.props.post.userId === getDecodedId()\r\n                            ? <button id={this.props.post.id} onClick={this.props.deletePost} className='delete right'>x</button>\r\n                            : null\r\n                        }\r\n                        {this.props.type === 'Text'\r\n                            ? <div className=\"card-content brown-text text-darken-4\">\r\n                                <p className='center'>{this.props.post.text}</p>\r\n                            </div>\r\n                            : null}\r\n\r\n                        {this.props.type === 'Image'\r\n                            ? <div className=\"card-image\">\r\n                                <img src={this.props.post.imageUrl} alt='Something' />\r\n                            </div>\r\n                            : null}\r\n\r\n                        {this.props.type === 'Video'\r\n                            ? <div>\r\n                                <iframe title={this.props.post.id} width=\"100%\" height='400px' src={this.props.post.videoUrl} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            </div>\r\n                            : null}\r\n\r\n                        <div className=\"card-action\">\r\n                            <Link to={`/feeds/${this.props.post.id}`} className='brown-text text-darken-4'>{this.props.type} post</Link>\r\n                            <CommentsCount postId={this.props.post.id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostItem;","import React, { Component } from 'react';\r\nimport { fetchPosts, fetchCreatePost, fetchDeletePost } from '../../../services/Posts';\r\nimport FloatingButton from '../FloatingButton';\r\nimport PostItem from './PostItem';\r\n\r\nclass PostsFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            allPosts: true,\r\n            onlyImages: false,\r\n            onlyVideos: false,\r\n            onlyText: false,\r\n            postContent: '',\r\n            imageUrl: '',\r\n            videoUrl: '',\r\n\r\n        }\r\n\r\n        this.changeInputValues = this.changeInputValues.bind(this);\r\n        this.createTextPost = this.createTextPost.bind(this);\r\n        this.createImagePost = this.createImagePost.bind(this);\r\n        this.createVideoPost = this.createVideoPost.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n\r\n        this.filterText = this.filterText.bind(this);\r\n        this.filterVideos = this.filterVideos.bind(this);\r\n        this.filterImages = this.filterImages.bind(this);\r\n        this.allPosts = this.allPosts.bind(this);\r\n    }\r\n\r\n    changeInputValues(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchPosts()\r\n            .then((posts) => {\r\n                const reversedPosts = posts.reverse()\r\n                this.setState({\r\n                    posts: reversedPosts\r\n                })\r\n            })\r\n    }\r\n\r\n    createTextPost(e) {\r\n        e.preventDefault()\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            type: 'text',\r\n            text: this.state.postContent,\r\n            isPublic: true\r\n        }\r\n\r\n        fetchCreatePost(body)\r\n            .then((post) => {\r\n                console.log(post);\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    createImagePost(e) {\r\n        e.preventDefault()\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            type: 'image',\r\n            imageUrl: this.state.imageUrl,\r\n            isPublic: true\r\n        }\r\n\r\n        fetchCreatePost(body)\r\n            .then((post) => {\r\n                console.log(post);\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    createVideoPost(e) {\r\n        e.preventDefault()\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            type: 'video',\r\n            videoUrl: this.state.videoUrl,\r\n            isPublic: true,\r\n        }\r\n\r\n        fetchCreatePost(body)\r\n            .then((post) => {\r\n                console.log(post);\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    deletePost(e) {\r\n        e.preventDefault();\r\n\r\n        fetchDeletePost(e.target.id)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                fetchPosts()\r\n                    .then((posts) => {\r\n                        const reversedPosts = posts.reverse()\r\n                        this.setState({\r\n                            posts: reversedPosts\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    showPosts() {\r\n        if (!this.state.posts.length) {\r\n            return <h1 className='center'>Loading...</h1>\r\n        }\r\n\r\n        if (this.state.allPosts) {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isText()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Text' />\r\n                    )\r\n                } else if (post.isPicture()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Image'\r\n                        />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Video' />\r\n                    )\r\n                }\r\n            })\r\n        } else if (this.state.onlyImages) {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isPicture()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Image' />\r\n                    )\r\n                }\r\n                return null;\r\n            })\r\n        } else if (this.state.onlyText) {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isText()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Text' />\r\n                    )\r\n                }\r\n                return null;\r\n            })\r\n        } else {\r\n            return this.state.posts.map((post) => {\r\n                if (post.isVideo()) {\r\n                    return (\r\n                        <PostItem deletePost={this.deletePost} key={post.id} post={post} type='Video' />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n\r\n    filterText(e) {\r\n        this.setState({\r\n            allPosts: false,\r\n            onlyImages: false,\r\n            onlyVideos: false,\r\n            onlyText: true,\r\n        })\r\n    }\r\n\r\n    filterVideos(e) {\r\n        this.setState({\r\n            allPosts: false,\r\n            onlyImages: false,\r\n            onlyVideos: true,\r\n            onlyText: false,\r\n        })\r\n    }\r\n\r\n    filterImages(e) {\r\n        this.setState({\r\n            allPosts: false,\r\n            onlyImages: true,\r\n            onlyVideos: false,\r\n            onlyText: false,\r\n        })\r\n    }\r\n\r\n    allPosts(e) {\r\n        this.setState({\r\n            allPosts: true,\r\n            onlyImages: false,\r\n            onlyVideos: false,\r\n            onlyText: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='row'>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.allPosts}>All Posts</button>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.filterImages}>Images</button>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.filterVideos}>Videos</button>\r\n                    <button className=\"waves-effect waves-light btn col s3\" onClick={this.filterText}>Text</button>\r\n                </div>\r\n                {this.showPosts()}\r\n                <FloatingButton changeInputValues={this.changeInputValues} postContent={this.state.postContent} imageUrl={this.state.imageUrl} videoUrl={this.state.videoUrl} createTextPost={this.createTextPost} createImagePost={this.createImagePost} createVideoPost={this.createVideoPost} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostsFeed;","import React, { Component } from 'react';\r\nimport { fetchSinglePost } from '../../../services/Posts';\r\nimport { getDecodedId } from '../../../services/Users';\r\nimport { postComment, fetchCommentsByPostId, fetchDeleteComment } from '../../../services/Comments';\r\n\r\nimport './SinglePost.css'\r\n\r\nclass SinglePost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: null,\r\n            comments: [],\r\n            commentInputValue: '',\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n        this.deleteComment = this.deleteComment.bind(this);\r\n        this.submitComment = this.submitComment.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchSinglePost(this.props.match.params.id)\r\n            .then((post) => {\r\n\r\n                fetchCommentsByPostId(this.props.match.params.id)\r\n                    .then((comments) => {\r\n                        const reversedComments = comments.reverse()\r\n                        this.setState({\r\n                            post,\r\n                            comments: reversedComments\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({\r\n            commentInputValue: e.target.value,\r\n        })\r\n    }\r\n\r\n    submitComment(e) {\r\n        e.preventDefault();\r\n\r\n        const body = {\r\n            sid: Math.random() * 1000000,\r\n            userId: getDecodedId(),\r\n            postId: this.props.match.params.id,\r\n            body: this.state.commentInputValue,\r\n            isPublic: true\r\n        }\r\n\r\n        postComment(body)\r\n            .then((comment) => {\r\n                console.log(comment);\r\n\r\n                fetchCommentsByPostId(this.props.match.params.id)\r\n                    .then((comments) => {\r\n                        const reversedComments = comments.reverse()\r\n                        this.setState({\r\n                            comments: reversedComments,\r\n                            commentInputValue: ''\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    deleteComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetchDeleteComment(e.target.id)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                fetchCommentsByPostId(this.props.match.params.id)\r\n                    .then((comments) => {\r\n                        const reversedComments = comments.reverse()\r\n                        this.setState({\r\n                            comments: reversedComments,\r\n                            commentInputValue: ''\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    showPost() {\r\n        if (!this.state.post) {\r\n            return <h1>Loading</h1>;\r\n        }\r\n\r\n        if (this.state.post.isText()) {\r\n            return (\r\n                <div key={this.state.post.id} className=\"row post\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card teal lighten-4\">\r\n                            <div className=\"card-content brown-text text-darken-4\">\r\n                                <p className='center'>{this.state.post.text}</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <a className='brown-text text-darken-4' href=\"/\">Text post</a>\r\n                                <a className='right brown-text text-darken-4' href=\"/\">{this.state.comments.length} Comments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.post.isPicture()) {\r\n            return (\r\n                <div key={this.state.post.id} className=\"row post\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card teal lighten-4\">\r\n                            <div className=\"card-image\">\r\n                                <img src={this.state.post.imageUrl} alt='Something' />\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <a className='brown-text text-darken-4' href=\"/\">Image post</a>\r\n                                <a className='right brown-text text-darken-4' href=\"/\">{this.state.comments.length} Comments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div key={this.state.post.id} className=\"row post\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card teal lighten-4\">\r\n\r\n                            <div key={this.state.post.id}>\r\n                                <iframe title={this.state.post.id} width=\"100%\" height='400px' src={this.state.post.videoUrl} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <a className='brown-text text-darken-4' href=\"/\">Video post</a>\r\n                                <a className='right brown-text text-darken-4' href=\"/\">{this.state.comments.length} Comments</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    showComments() {\r\n        return this.state.comments.map((comment) => {\r\n            return (\r\n                <div key={comment.id} className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-image\">\r\n                                {comment.userId === getDecodedId()\r\n                                    ? <button id={comment.id} onClick={this.deleteComment} className='delete right'>x</button>\r\n                                    : null\r\n                                }\r\n                                <img className='comment-image' src={comment.userAvatarUrl ? comment.userAvatarUrl : 'http://via.placeholder.com/125'} alt='Something' />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <p>{comment.body}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.showPost()}\r\n                <form method='POST' action='/'>\r\n                    <input type='text' placeholder='Add your comment' value={this.state.commentInputValue} onChange={this.changeValue} />\r\n                    <input type='submit' className='teal white-text' onClick={this.submitComment} disabled={this.state.commentInputValue ? false : true} />\r\n                </form>\r\n                {this.showComments()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SinglePost;","import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: props.user.firstName,\r\n            lastName: props.user.lastName,\r\n            name: `${props.user.firstName} ${props.user.lastName}`,\r\n            bio: props.user.biography,\r\n            image: props.user.avatarUrl\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    isValidName = (value) => {\r\n        if (value.length > 30) {\r\n            return { error: 'Error' };\r\n        }\r\n\r\n        if (value.length < 3) {\r\n            return { error: 'Error' };\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    isValidBio = (value) => {\r\n        if (value.length > 60) {\r\n            return { error: \"Error\" };\r\n        }\r\n\r\n        if (value.length < 10) {\r\n            return { error: 'Error' };\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    isValidImg = (value) => {\r\n        if (!value.length || value.startsWith(\"http\") === false) {\r\n            return { error: \"Error\" }\r\n        }\r\n        return true\r\n    }\r\n\r\n    getInputValues = (params) => {\r\n        const body = {\r\n            avatarUrl: this.state.image,\r\n            name: {\r\n                prefix: \"-\",\r\n                first: this.state.firstName,\r\n                last: this.state.lastName,\r\n            },\r\n            about: {\r\n                job: '-',\r\n                bio: this.state.bio,\r\n                countryCode: '-'\r\n            }\r\n        }\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const validationResultName = this.isValidName(this.state.name);\r\n        const validationResultBio = this.isValidBio(this.state.bio)\r\n        const validationResultImg = this.isValidImg(this.state.image)\r\n\r\n        return (\r\n            <div className=\"modal-wrapper \"\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6 \"><h4>Update profile</h4></div>\r\n                    </div>\r\n                    <div className=\"row\" >\r\n                        <div className=\"col s5 center\">\r\n                            <img className='modal-pic' src={this.props.user.avatarUrl} title=\"user\" alt='Something..' />\r\n\r\n                        </div>\r\n                        <div className=\"input-field col s5 \" id=\"full_name\"><p className=\"left\">Full Name:</p>\r\n                            <input\r\n                                name=\"name\"\r\n                                placeholder=\"Full Name\"\r\n                                onChange={this.handleInputChange}\r\n                                id=\"first_name\" type=\"text\"\r\n                                className=\"validate\"\r\n                                defaultValue={this.state.name} />\r\n                            {<p style={{ color: 'red', width: '50px' }}>{validationResultName.error}</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\"><p>Image URL:</p>\r\n                        <label htmlFor=\"img_url\">\r\n                            <input\r\n                                name='image'\r\n                                placeholder=\"ImgUrl\"\r\n                                onChange={this.handleInputChange}\r\n                                id=\"img_url\"\r\n                                type=\"text\"\r\n                                className=\"validate\"\r\n                                defaultValue={this.state.image}\r\n                            />\r\n                        </label>\r\n                        {<p id=\"error\" style={{ color: 'red', width: '50px' }}>{validationResultImg.error}</p>}\r\n                    </div>\r\n                    <div className=\"row\"><p>Biography:</p>\r\n\r\n                        <label htmlFor=\"biography\">\r\n\r\n                            <input\r\n                                name='bio'\r\n                                placeholder=\"User description and all text that describes user\"\r\n                                id=\"biography\" onChange={this.handleInputChange}\r\n                                type=\"text\" className=\"validate\"\r\n                                defaultValue={this.state.bio}\r\n                            />\r\n                        </label>\r\n                        {<p id=\"error\" style={{ color: 'red', width: '50px' }}>{validationResultBio.error}</p>}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn waves-effect waves-light btn-mrg-1\" onClick={this.props.close}>CLOSE</button>\r\n                        <button className=\"btn waves-effect waves-light btn-mrg-2\" type=\"submit\" disabled={validationResultBio.error || validationResultImg.error || validationResultName.error} name=\"action\" onClick={this.props.handleSubmit(this.getInputValues())} >UPDATE</button>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal/Modal'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"row center profile\">\r\n            <div className=\"col s12 \">\r\n                <div className=\"\">\r\n                    {props.isShowing ? <Modal className=\"modal\" show={props.isShowing} close={props.closeModal} user={props.user} handleSubmit={props.handleSubmit} /> : null}\r\n                    <div className=\"card-image\">\r\n                        <img src={props.user.avatarUrl} alt=\"\" className=\"circle responsive-img \" />\r\n                        <h5 className=\"card-title\">{`${props.user.firstName} ${props.user.lastName}`}</h5>\r\n                    </div>\r\n\r\n                    {props.closeModal ?\r\n                        <button data-target=\"modal1\" className=\"btn modal-trigger\" onClick={props.openModal} >Edit Profile</button> :\r\n                        null}\r\n\r\n                    <div className=\"card-content\">\r\n                        <p>{props.user.biography}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <div className=\"chip\"><i className=\"fab fa-cuttlefish\"></i> {props.comments.length} Comments  </div>\r\n                        <div className=\"chip\"><i className=\"fab fa-cuttlefish\"></i> {props.posts.length} posts </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    posts: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Profile;","import { getToken } from \"./Users\";\r\n\r\nconst UpdateProfile = (userId, body) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/users/${userId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'x-api-key': 'B1tD3V',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        },\r\n        body: JSON.stringify(body)\r\n    })\r\n        .then((res) => {\r\n            console.log(res);\r\n            return res.json()\r\n        })\r\n        .then((result) => {\r\n            console.log(result);\r\n            return result\r\n        });\r\n}\r\n\r\nexport default UpdateProfile;","import React, { Component } from 'react';\r\nimport { fetchLoggedInUser } from '../../../services/Users'\r\nimport Profile from './Profile';\r\nimport UpdateProfile from '../../../services/UpdateProfile'\r\nimport { getDecodedId } from '../../../services/Users';\r\n\r\nimport './MyProfile.css'\r\n\r\nclass MyProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: null,\r\n            comments: [],\r\n            posts: [],\r\n            isShowing: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUserData();\r\n    }\r\n\r\n    fetchUserData = () => {\r\n        fetchLoggedInUser()\r\n            .then(user => {\r\n                console.log(user);\r\n                this.setState({\r\n                    user: user,\r\n                    comments: user.comments,\r\n                    posts: user.posts\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.fetchUserData();\r\n        }\r\n    }\r\n\r\n    handleSubmit = (body) => (e) => {\r\n        e.preventDefault();\r\n\r\n        UpdateProfile(getDecodedId(), body)\r\n            .then((user) => {\r\n                this.setState({\r\n                    user: {\r\n                        avatarUrl: user.avatarUrl,\r\n                        firstName: user.name.first,\r\n                        lastName: user.name.last,\r\n                        biography: user.about.bio\r\n                    }\r\n                })\r\n            })\r\n\r\n        this.closeModal();\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            isShowing: true\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            isShowing: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Profile isShowing={this.state.isShowing} user={this.state.user} comments={this.state.comments} posts={this.state.posts} closeModal={this.closeModal} openModal={this.openModal} handleSubmit={this.handleSubmit} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyProfile","import React, { Component } from 'react';\r\nimport { fetchUsers } from '../../services/Users';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './PeoplePage.css'\r\n\r\nclass PeoplePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            inputValue: '',\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUsers().then((users) => {\r\n            this.setState({\r\n                users\r\n            })\r\n        })\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n\r\n    showSearch() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <form>\r\n                        <div className=\"input-field\">\r\n                            <input id=\"search\" type=\"search\" required value={this.state.inputValue} onChange={this.changeValue} />\r\n                            <label className=\"label-icon\" htmlFor=\"search\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </label>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    showPeople() {\r\n        return this.state.users\r\n            .filter((user) => {\r\n                const fullName = `${user.firstName} ${user.lastName}`;\r\n                return fullName.toLowerCase().includes(this.state.inputValue.toLowerCase())\r\n            })\r\n            .map((user) => (\r\n                <div key={user.id} className='row user clearfix valign-wrapper'>\r\n                    <div className='image left col s2'>\r\n                        <img className=\"img-people\" src={user.avatarUrl} alt='Something..' />\r\n                    </div>\r\n                    <div className='info col s9'>\r\n                        <h5><Link to={`profile/${user.id}`}>{`${user.firstName} ${user.lastName}`}</Link></h5>\r\n                        <p>Short user description: {user.biography}</p>\r\n                    </div>\r\n                    <div className='right col s1'>\r\n                        <p>Registered on: <b>{user.createdAt}</b></p>\r\n                    </div>\r\n                </div>\r\n            )\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.showSearch()}\r\n                {this.showPeople()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PeoplePage;","import React, { Component } from 'react';\r\n\r\nimport { fetchRegister } from '../../services/Register';\r\n\r\nimport M from 'materialize-css';\r\nimport './Register.css';\r\nimport { fetchLogin } from '../../services/Login';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameInputValueReg: '',\r\n            emailInputValueReg: '',\r\n            passwordInputValueReg: '',\r\n            emailInputValueLog: '',\r\n            passwordInputValueLog: '',\r\n            regValidate: null,\r\n            logValidate: null,\r\n            logButtonDisabled: false,\r\n            regButtonDisabled: false,\r\n        }\r\n\r\n        this.instance = null;\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.sendRegisterReq = this.sendRegisterReq.bind(this);\r\n        this.sendLoginReq = this.sendLoginReq.bind(this);\r\n    }\r\n\r\n    isValidEmailLogIn(value) {\r\n        if (value === '') {\r\n            return true;\r\n        }\r\n        if (!value.includes('@')) {\r\n            return {\r\n                error: 'Invalid email address'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isValidPassLogIn(value) {\r\n        if (value.length === 0) {\r\n            return true;\r\n        }\r\n        if (value.length < 6) {\r\n            return {\r\n                error: 'Password must be min 6 characters'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.instance = M.Tabs.init(document.querySelector('.tabs'));\r\n    }\r\n\r\n    isValidEmailRegister(value) {\r\n        if (value.length === 0) {\r\n            return true;\r\n        }\r\n        if (!value.includes(\"@\")) {\r\n            return {\r\n                error: 'Invalid email address'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isValidPassRegister(value) {\r\n        if (value.length === 0) {\r\n            return true;\r\n        }\r\n        if (value.length < 6) {\r\n            return {\r\n                error: 'Password must be min 6 characters'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    sendRegisterReq(e) {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            name: this.state.nameInputValueReg,\r\n            email: this.state.emailInputValueReg,\r\n            password: this.state.passwordInputValueReg,\r\n        }\r\n\r\n        fetchRegister(data)\r\n            .then((data) => {\r\n                if (data.statusCode === 422) {\r\n                    this.setState({\r\n                        regValidate: data.message,\r\n                        nameInputValueReg: '',\r\n                        emailInputValueReg: '',\r\n                        passwordInputValueReg: '',\r\n                    })\r\n                    return;\r\n                }\r\n                this.instance.select('login');\r\n            })\r\n    }\r\n\r\n    sendLoginReq(e) {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            email: this.state.emailInputValueLog,\r\n            password: this.state.passwordInputValueLog\r\n        }\r\n\r\n        fetchLogin(data)\r\n            .then((data) => {\r\n                if (data.accessToken) {\r\n                    localStorage.setItem('user', data.accessToken);\r\n                    this.props.logIn();\r\n                }\r\n\r\n                if (data.statusCode === 422) {\r\n                    this.setState({\r\n                        logValidate: 'Unable to login. Invalid credentials.',\r\n                    })\r\n                }\r\n\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const logEmailRes = this.isValidEmailLogIn(this.state.emailInputValueLog);\r\n        const logPassRes = this.isValidPassLogIn(this.state.passwordInputValueLog);\r\n        const regEmailRes = this.isValidEmailRegister(this.state.emailInputValueReg);\r\n        const regPassRes = this.isValidPassRegister(this.state.passwordInputValueReg);\r\n        return (\r\n            <>\r\n                <div className='row'>\r\n                    <div className='register col s6'>\r\n                        <h1>BitBook Register and Login</h1>\r\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt et voluptatum aliquam accusamus consequuntur distinctio nulla consectetur, dolorum dignissimos necessitatibus commodi. Nulla, maxime sint architecto ex itaque harum quas, quidem iusto eligendi laudantium, magni maiores quos. Odio necessitatibus ipsa laboriosam?</p>\r\n                    </div>\r\n                    <div className='col s5'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12\">\r\n                                <ul className=\"tabs\">\r\n                                    <li className=\"tab col s6\"><a href=\"#login\">Login</a></li>\r\n                                    <li className=\"tab col s6\"><a className='active' href=\"#register\">Register</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div id=\"login\" className=\"col s12\">\r\n                                <form>\r\n                                    <div className=\"form row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input name='emailInputValueLog' onChange={this.handleInputChange} placeholder=\"Email address\" id=\"login-email\" type=\"email\" className=\"validate\" value={this.state.emailInputValueLog} />\r\n                                            <label htmlFor=\"login-email\">Email</label>\r\n                                            <p className='validate-message center'>{logEmailRes ? logEmailRes.error : null}</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input name='passwordInputValueLog' onChange={this.handleInputChange} placeholder='Minimum 6 characters' id=\"login-password\" type=\"password\" className=\"validate\" value={this.state.passwordInputValueLog} />\r\n                                            <label htmlFor=\"login-password\">Password</label>\r\n                                            <p className='validate-message center'>{logPassRes ? logPassRes.error : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button disabled={logEmailRes.error || logPassRes.error} onClick={this.sendLoginReq} className='register col s12' type='submit'>Login</button>\r\n                                    <p className='validate-message center'>{this.state.logValidate}</p>\r\n                                </form>\r\n                            </div>\r\n                            <div id=\"register\" className=\"col s12\">\r\n                                <form>\r\n                                    <div className=\"form row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input onChange={this.handleInputChange} name='nameInputValueReg' placeholder=\"Full name\" id=\"full-name\" type=\"text\" className=\"validate\" value={this.state.nameInputValueReg} />\r\n                                            <label htmlFor=\"full-name\">Name</label>\r\n\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input onChange={this.handleInputChange} name='emailInputValueReg' placeholder=\"Email address\" id=\"register-email\" type=\"email\" className=\"validate\" value={this.state.emailInputValueReg} />\r\n                                            <label htmlFor=\"register-email\">Email</label>\r\n                                            <p className='validate-message center' >{regEmailRes ? regEmailRes.error : null}</p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input onChange={this.handleInputChange} name='passwordInputValueReg' placeholder='Minimum 6 characters' id=\"register-password\" type=\"password\" className=\"validate\" value={this.state.passwordInputValueReg} />\r\n                                            <label htmlFor=\"register-password\">Password</label>\r\n                                            <p className='validate-message center'  >{regPassRes ? regPassRes.error : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p className='validate-message center'>{this.state.regValidate}</p>\r\n                                    <button disabled={regEmailRes.error || regPassRes.error} className='register col s12' type='submit' onClick={this.sendRegisterReq}>Register</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","const fetchRegister = (dataObj) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': 'B1tD3V'\r\n        },\r\n        body: JSON.stringify(dataObj)\r\n    })\r\n        .then(res => {\r\n            console.log(res);\r\n            return res.json()\r\n        })\r\n        .then(token => token)\r\n}\r\n\r\nexport {\r\n    fetchRegister,\r\n}","const fetchLogin = (dataObj) => {\r\n    return fetch(`https://book-api.hypetech.xyz/v1/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': 'B1tD3V'\r\n        },\r\n        body: JSON.stringify(dataObj)\r\n    })\r\n        .then(res => res.json())\r\n        .then((token) => token)\r\n}\r\n\r\nexport {\r\n    fetchLogin\r\n}","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { fetchUserById } from '../../../services/Users';\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            comments: [],\r\n            posts: [],\r\n            isShowing: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUserById(this.props.match.params.id)\r\n            .then(user => {\r\n                this.setState({\r\n                    user: user,\r\n                    comments: user.comments,\r\n                    posts: user.posts\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Profile isShowing={this.state.isShowing} user={this.state.user} comments={this.state.comments} posts={this.state.posts} closeModal={this.closeModal} openModal={this.openModal} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport PostsFeed from './components/PostsFeed/PostsFeed';\r\nimport SinglePost from './components/PostsFeed/SinglePost';\r\nimport MyProfile from './components/Profile/MyProfile'\r\nimport PeoplePage from './components/PeoplePage';\r\nimport RegisterPage from './components/Register';\r\nimport UserProfile from './components/Profile/UserProfile';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logged: localStorage.getItem('user') ? true : false,\r\n    }\r\n\r\n    this.logIn = this.logIn.bind(this)\r\n  }\r\n\r\n  logIn() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        logged: !prevState.logged\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.logged) {\r\n      return (\r\n        <Route path='/' render={(props) => {\r\n          return <RegisterPage logIn={this.logIn} />\r\n        }} />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <main className='container'>\r\n          <Switch>\r\n            <Route path='/people' component={PeoplePage} />\r\n            <Route path='/profile/:id' component={UserProfile} />\r\n            <Route path='/profile' component={MyProfile} />\r\n            <Route path='/feeds/:id' component={SinglePost} />\r\n            <Route path='/' component={PostsFeed} />\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport App from '../src/app/App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}